.kudo_message_cont{:id => "kudo_message_id_#{kudo.kudo.id}"}
 - if kudo.author
  = profile_picture_for(kudo.author)
 - else
  = anon_picture
 .kudo_message_bubble_cont
  .kudo_message_top
  .kudo_message_mid
   .kudo_message_text_cont

    %p{:id => "kudo_#{kudo.id}"}
     %span.category= kudo.category
     %span.sender= kudo.author.to_s
     %span.greater_than &gt;
     %span.receiver
      = kudo.recipient.to_s
    %p= kudo.body

   - unless kudo_object(kudo).has_been_improperly_flagged?
    .kudo_flag_cont.kf_dimmed.clickable{"data-id" => kudo.kudo.id }
   %div= link_to('', user_kudo_path(current_user, kudo), :method => :delete, :confirm => I18n.t(:are_you_sure), :class => "delete_kudo_btn")

   .popup_placeholder{:id => "flag_popup_placeholder_#{kudo.kudo.id}"}
   .social_buttons
    .google_plus
     %g:plusone
    .facebook_like
     %script{:src => "http://connect.facebook.net/en_US/all.js#xfbml=1"}
     %fb:like{:href => "", :send => "false", :layout => "button_count", :width => "125", :show_faces => "false", :font => "trebuchet ms"}
    .kudo_comment
     = link_to t(:kudo_comment), 'javascript:void(0)', :class  => "action_link comment_form_toggle",
                                       :id     => kudo_object(kudo).id,
                                       :remote => true
     = render :partial => "comments/comment", :locals => {:kudo => kudo_object(kudo) }
   .clearing
  .kudo_message_bot
 .clearing
