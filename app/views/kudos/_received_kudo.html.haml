.kudo_message_cont{:id => "kudo_message_id_#{kudo.kudo.id}"}
 - if kudo.author
  = link_to profile_picture_for(kudo.author), user_profile_path(kudo.author), :class => "business-card", :id => kudo_object(kudo).id
 - else
  = anon_picture
 .kudo_message_bubble_cont
  .kudo_message_top
  .kudo_message_mid{"data-id" => kudo.id, "data-scope" => kudo.share_scope }
   .kudo_message_text_cont

    %p{:id => "kudo_#{kudo.id}"}
     %span.category= kudo.category
     %span.sender= link_to kudo.author.to_s, user_profile_path(kudo.author), :class => "business-card", :id => kudo_object(kudo) if kudo.author
     %span.greater_than &gt;
     %span.receiver
      = kudo.recipient.to_s
    %p= kudo.body

   - unless kudo_object(kudo).has_been_improperly_flagged?
    .kudo_flag_cont.kf_dimmed.clickable{"data-id" => kudo.kudo.id }
   %div= link_to('', user_kudo_path(current_user, kudo), :method => :delete, :confirm => I18n.t(:are_you_sure), :class => "delete_kudo_btn")

   .popup_placeholder{:id => "flag_popup_placeholder_#{kudo.kudo.id}"}
    .clearing
    .kudo_comment
     - unless kudo.kudo.comments_disabled?
      = link_to t(:kudo_comment), 'javascript:void(0)', :class  => "action_link comment_form_toggle",
                                                :id     => kudo_object(kudo).id,
                                                :remote => true
    .social_buttons
     %div{:id => "google_plus_#{kudo.id}", :class => "plusone_button"}
     %div{:id => "facebook_like_#{kudo.id}", :class => "facebook_like"}
    .clearing
     = render :partial => "comments/comment",    :locals => {:kudo => kudo_object(kudo) }
     = render :partial => "kudos/business_card", :locals => {:kudo => kudo_object(kudo) }
   .clearing
  .kudo_message_bot
 .clearing
