.kudo_message_cont{:id => "kudo_message_id_#{kudo.id}"}
 = link_to kudo_author_picture(kudo), user_profile_path(kudo.author), :class => "business-card", :id => kudo.id
 .kudo_message_bubble_cont
  .kudo_message_top
  .kudo_message_mid{"data-id" => kudo.id, "data-scope" => kudo.share_scope }
   .kudo_message_text_cont
    %p
     %span.category= kudo.category
     %span.sender= link_to kudo.author.to_s, user_profile_path(kudo.author), :class => "business-card", :id => kudo.id if kudo.author
     %span.greater_than &gt;
     %span.receiver
      = kudo.recipients_readable_list
     %span.share_scope
      = "Shared with #{shared_with kudo.share_scope}"
    %p= kudo.body

    
   - unless kudo_object(kudo).has_been_improperly_flagged?
    .kudo_flag_cont.kf_dimmed.clickable{"data-id" => kudo.id }

   %div= sent_kudo_destroy_link(kudo)

   .popup_placeholder{:id => "flag_popup_placeholder_#{kudo.id}"}

    .clearing
    .kudo_comment
     - unless kudo.comments_disabled?
      = link_to t(:kudo_comment), '#', :class   => "action_link comment_form_toggle",
                                                        :id     => kudo.id,
                                                        :remote => true
    .social_buttons
     %div{:id => "google_plus_#{kudo.id}", :class => "plusone_button"}
     %div{:id => "facebook_like_#{kudo.id}", :class => "facebook_like"}
    .clearing

   = render :partial => "comments/comment", :locals => {:kudo => kudo}
   = render :partial => "kudos/business_card", :locals => {:kudo => kudo_object(kudo) }
   .clearing
  .kudo_message_bot
 .clearing
